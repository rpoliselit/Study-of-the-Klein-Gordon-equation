(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    118204,       2769]
NotebookOptionsPosition[    115368,       2674]
NotebookOutlinePosition[    115893,       2693]
CellTagsIndexPosition[    115850,       2690]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Study of the Klein-Gordon equation", "Title",
 CellChangeTimes->{{3.73333915543325*^9, 3.7333391675401497`*^9}}],

Cell["\<\
Prof. Dr. Rafael Poliseli Teles\
\>", "Author",
 CellChangeTimes->{{3.73338813780155*^9, 3.733388150447753*^9}}],

Cell["\<\
Departamento de f\[IAcute]sica, IGCE, UNESP, Brazil\
\>", "Department",
 CellChangeTimes->{{3.73338816696834*^9, 3.733388204917906*^9}, {
  3.733389129490509*^9, 3.733389145516433*^9}}],

Cell[CellGroupData[{

Cell["Introducton", "Subtitle",
 CellChangeTimes->{{3.7333882740688963`*^9, 3.7333882996905603`*^9}}],

Cell[TextData[{
 "The Klein-Gordon equation describes relativistic spinless particles as \
pions (\[Pi]-mesons), which a scalar field represents ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (non-charged \[Pi]-meson) and a complex field represents ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "+"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "-"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (charged \[Pi]-mesons).\n\nDeduction Klein-Gordon equation\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["E", "2"], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], 
      SuperscriptBox["c", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["m", "2"], 
      SuperscriptBox["c", "4"]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["E", "^"], "\[Rule]", 
    RowBox[{"i", " ", "\[HBar]", " ", 
     SubscriptBox["\[PartialD]", "t"]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["p", "^"], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "i"}], " ", "\[HBar]", "\[Del]"}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SuperscriptBox["c", "2"]]}], 
      RowBox[{
       SubsuperscriptBox["\[PartialD]", "t", "2"], "\[CapitalPhi]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Del]", "2"], "\[CapitalPhi]"}]}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["m", "2"], 
       SuperscriptBox["c", "2"]}], 
      SuperscriptBox["\[HBar]", "2"]], "\[CapitalPhi]"}]}], TraditionalForm]]],
 "\nNatural units: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[HBar]", "=", 
    RowBox[{"c", "=", "1"}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SubsuperscriptBox["\[PartialD]", "t", "2"], "\[CapitalPhi]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Del]", "2"], "\[CapitalPhi]"}]}], "=", 
    RowBox[{
     SuperscriptBox["m", "2"], "\[CapitalPhi]"}]}], TraditionalForm]]],
 "\nDeduction of continuity equation"
}], "Text",
 CellChangeTimes->{{3.733339273041546*^9, 3.73333952592764*^9}, {
  3.7333395915488043`*^9, 3.7333397892895308`*^9}, {3.733380915943605*^9, 
  3.733380928293848*^9}, {3.733380988387823*^9, 3.7333810890349216`*^9}, {
  3.73338122123027*^9, 3.733381223028916*^9}, {3.7333812705883636`*^9, 
  3.733381295497069*^9}, {3.733381942492057*^9, 3.733381965217701*^9}, {
  3.7333849809465437`*^9, 3.7333849809466133`*^9}, {3.733385152029476*^9, 
  3.733385366836808*^9}, {3.733385398548147*^9, 3.733385399556555*^9}, {
  3.733387935828952*^9, 3.7333879414554567`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Stationary solutions of Klein-Gordon equation\
\>", "Subtitle",
 CellChangeTimes->{{3.7333406610332003`*^9, 3.733340690310964*^9}, {
  3.733340729061511*^9, 3.733340739325281*^9}, {3.733379671995373*^9, 
  3.733379679417325*^9}, {3.733388035997499*^9, 3.733388044403718*^9}}],

Cell[TextData[{
 "Proposing a plane wave solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalPhi]", "(", 
     RowBox[{
      StyleBox["r",
       FontWeight->"Bold"], ",", "t"}], ")"}], "=", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         StyleBox["k",
          FontWeight->"Bold"], "\[CenterDot]", 
         StyleBox["r",
          FontWeight->"Bold"]}], 
        StyleBox["-",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{"\[Omega]", " ", "t"}],
         FontWeight->"Bold"]}], 
       StyleBox[")",
        FontWeight->"Bold"]}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.733381257251185*^9, 3.733381263227199*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", " ", "t"}]], "*", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"kx", "*", "x"}], "+", 
        RowBox[{"ky", "*", "y"}], "+", 
        RowBox[{"kz", "*", "z"}]}], ")"}]}]]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], ",", "t", ",", 
       "t"}], "]"}]}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], ",", "x", ",", 
      "x"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], ",", "y", ",", 
      "y"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], ",", "z", ",", 
      "z"}], "]"}]}], "\[Equal]", 
   RowBox[{
    SuperscriptBox["m", "2"], 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}]}]}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.733339797165756*^9, 3.7333400392630863`*^9}, {
  3.733340105277913*^9, 3.733340198972069*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"kx", " ", "x"}], "+", 
       RowBox[{"ky", " ", "y"}], "+", 
       RowBox[{"kz", " ", "z"}], "-", 
       RowBox[{"t", " ", "\[Omega]"}]}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["kx", "2"], "+", 
     SuperscriptBox["ky", "2"], "+", 
     SuperscriptBox["kz", "2"], "+", 
     SuperscriptBox["m", "2"], "-", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{{3.7333400177736692`*^9, 3.733340039815886*^9}, {
   3.7333400978521347`*^9, 3.733340205155158*^9}, 3.735361522669277*^9}]
}, Open  ]],

Cell[TextData[{
 "Dispersion relation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "=", 
    RowBox[{
     SuperscriptBox["k", "2"], "+", 
     SuperscriptBox["m", "2"]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    RowBox[{"\[PlusMinus]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["k", "2"], "+", 
       SuperscriptBox["m", "2"]}]]}]}], TraditionalForm]]],
 " \[ImplicitPlus]\[ImplicitPlus]"
}], "Text",
 CellChangeTimes->{{3.73334022703223*^9, 3.733340235807077*^9}, {
  3.7333402786300383`*^9, 3.733340306369515*^9}, {3.733340340675424*^9, 
  3.733340348553565*^9}, {3.733340417258108*^9, 3.733340421095269*^9}, {
  3.733340490278852*^9, 3.733340532834586*^9}}],

Cell[CellGroupData[{

Cell["1D solitary wave", "Section",
 CellChangeTimes->{{3.7333797302243*^9, 3.733379732263392*^9}, {
  3.73337980062929*^9, 3.733379808076807*^9}, {3.733380711485326*^9, 
  3.73338072693285*^9}, {3.733380956445236*^9, 3.7333809805243063`*^9}, {
  3.733381418837318*^9, 3.7333814221087637`*^9}}],

Cell[CellGroupData[{

Cell["Free particle", "Subsection",
 CellChangeTimes->{{3.735369073916291*^9, 3.735369086984412*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]1D", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Phi]1D", "[", "x", "]"}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", " ", "\[ImaginaryI]"}], " ", "\[Omega]", " ", 
     "t"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]1D", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "t", ",", "t"}], "]"}]}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Phi]1D", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", "x", ",", "x"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox["m", "2"], 
     RowBox[{"\[Phi]1D", "[", 
      RowBox[{"x", ",", "t"}], "]"}]}]}], ",", 
   RowBox[{"\[Phi]1D", "[", "x", "]"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "@", "\[Phi]1D"}]}], "Input",
 CellChangeTimes->{{3.733340702057008*^9, 3.7333407189515257`*^9}, {
   3.733379757402502*^9, 3.7333799585621*^9}, 3.73338070064032*^9, {
   3.733380733895608*^9, 3.733380734494678*^9}, {3.73338547048977*^9, 
   3.7333854941455927`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]1D", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"x", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "x"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7333798538998127`*^9, 3.733379863727335*^9}, 
   3.7333798991944513`*^9, 3.733379959112463*^9, {3.733380701357317*^9, 
   3.733380735268093*^9}, 3.7333808534462013`*^9, {3.73338548722611*^9, 
   3.733385494732629*^9}, 3.7353615232220707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]1D", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Phi]1D", "[", "x", "]"}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
    "\[ImaginaryI]", " ", "\[Omega]", " ", 
     "t"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]1D", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "t", ",", "t"}], "]"}]}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Phi]1D", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", "x", ",", "x"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox["m", "2"], 
     RowBox[{"\[Phi]1D", "[", 
      RowBox[{"x", ",", "t"}], "]"}]}]}], ",", 
   RowBox[{"\[Phi]1D", "[", "x", "]"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "@", "\[Phi]1D"}]}], "Input",
 CellChangeTimes->{{3.733380896962075*^9, 3.73338089748103*^9}, {
  3.733385501937545*^9, 3.7333855021692553`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]1D", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"x", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "x"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["m", "2"], "-", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.733380898248877*^9, 3.7333855029568644`*^9, 
  3.735361523284294*^9}]
}, Open  ]]
}, Open  ]],

Cell["Particle in a box potential", "Subsection",
 CellChangeTimes->{{3.73536910612998*^9, 3.735369115695503*^9}}],

Cell["\<\
Transmision through a potential barrier\
\>", "Subsection",
 CellChangeTimes->{{3.735661917696274*^9, 3.735661967214172*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["1D gaussian wave packet", "Section",
 CellChangeTimes->{{3.733388001982657*^9, 3.733388016980692*^9}}],

Cell["\<\


\
\>", "Text",
 CellChangeTimes->{{3.73338910154877*^9, 3.733389101893811*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Time-dependent variational method for each solution of Klein-Gordon equation\
\>", "Subtitle",
 CellChangeTimes->{{3.7333806458246927`*^9, 3.733380675310485*^9}, {
  3.733388059915249*^9, 3.7333880912420473`*^9}}],

Cell[TextData[{
 "Lagrangians and variational method explanation.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalL]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[PartialD]", "\[Phi]"}], 
        RowBox[{"\[PartialD]", "t"}]], ")"}], 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SuperscriptBox["\[Phi]", "*"]}], 
        RowBox[{"\[PartialD]", "t"}]], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Del]", "\[Phi]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"\[Del]", 
        SuperscriptBox["\[Phi]", "*"]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["m", "2"], 
      SuperscriptBox["\[Phi]", "*"], "\[Phi]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.733381144847118*^9, 3.733381185884933*^9}, {
  3.73535522377934*^9, 3.735355236069214*^9}, {3.735355431920244*^9, 
  3.735355455095343*^9}, {3.735357251471156*^9, 3.735357376231884*^9}, {
  3.735357508281663*^9, 3.735357563968205*^9}}],

Cell[CellGroupData[{

Cell["1D solitary wave", "Section",
 CellChangeTimes->{{3.7333797302243*^9, 3.733379732263392*^9}, {
  3.73337980062929*^9, 3.733379808076807*^9}, {3.733380711485326*^9, 
  3.73338072693285*^9}, {3.733380956445236*^9, 3.7333809805243063`*^9}, {
  3.733381418837318*^9, 3.7333814221087637`*^9}}],

Cell["\<\
The varational method is applied to the solution of 1D solitary wave from \
part about stationary solutions.
In order to solve the integrals it is necessary to use either periodic \
boundary conditions or a cutoff, since the system describes an free particle.\
\
\>", "Text",
 CellChangeTimes->{{3.7333858754906693`*^9, 3.733386042941019*^9}, {
   3.7333868975976562`*^9, 3.7333870240962477`*^9}, {3.733387363813092*^9, 
   3.733387365684156*^9}, {3.7333874039399652`*^9, 3.733387433633816*^9}, {
   3.7333878132609587`*^9, 3.733387822675722*^9}, 3.733953098321249*^9, {
   3.735310352503236*^9, 3.735310407078331*^9}, {3.735310455197304*^9, 
   3.735310466211446*^9}, {3.735310516355047*^9, 3.735310704863134*^9}, {
   3.7353107522171907`*^9, 3.7353107645941477`*^9}, {3.735310820488443*^9, 
   3.73531087616695*^9}, {3.73531094041743*^9, 3.735311113573003*^9}, {
   3.73531152613515*^9, 3.7353115730507174`*^9}, {3.7353116191269827`*^9, 
   3.735311638470724*^9}}],

Cell[CellGroupData[{

Cell["c1(t) and c2(t) with periodic boundary conditions", "Subsection",
 CellChangeTimes->{{3.7333856584263983`*^9, 3.7333857251351223`*^9}, {
  3.7333877690306997`*^9, 3.733387809180241*^9}}],

Cell[TextData[{
 "The periodic boundary condition is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", 
     RowBox[{"x", "-", "L"}], ")"}], "=", 
    RowBox[{"\[Phi]", "(", 
     RowBox[{"x", "+", "L"}], ")"}]}], TraditionalForm]]],
 ". Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]]}]}]}], 
   TraditionalForm]]],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", 
     RowBox[{"x", "-", "L"}], ")"}], "=", 
    RowBox[{"\[Phi]", "(", 
     RowBox[{"x", "+", "L"}], ")"}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "L"}]}]]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "L"}]}]]}]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "L"}]}]]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "L"}]}]]}]}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["c", "1"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]]}], "-", 
       RowBox[{
        SubscriptBox["c", "2"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]]}]}], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "L"}]]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["c", "1"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]]}], "-", 
       RowBox[{
        SubscriptBox["c", "2"], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "x"}]]}]}], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "L"}]]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", "\[ImaginaryI]", " ", "k", " ", "L"}]], "=", "1"}], 
   TraditionalForm]]],
 "\nwe have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "n"], "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]", " ", "n"}], "L"]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", "2", ",", "3", ",", "4", ",", 
    RowBox[{"5", "..."}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{
  3.735311645546372*^9, {3.735361038632361*^9, 3.735361055525855*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", "\[ImaginaryI]", " ", "k", " ", "L"}]], "\[Equal]", "1"}], 
   ",", "k"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"4", "n", " ", "\[Pi]"}], "]"}], 
   RowBox[{"4", "n", " ", "\[Pi]"}]], "/.", 
  RowBox[{"n", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", 
     RowBox[{"4", "n", " ", "\[Pi]"}], "]"}], 
    RowBox[{"4", "n", " ", "\[Pi]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.735311121175087*^9, 3.735311153577894*^9}, {
  3.735311206457138*^9, 3.7353112889171343`*^9}, {3.7353113642117567`*^9, 
  3.7353113655457973`*^9}, {3.7353113974500723`*^9, 3.735311504635933*^9}, {
  3.735311669414523*^9, 3.7353116744932547`*^9}, {3.735361505077643*^9, 
  3.7353615159406843`*^9}, {3.735452630740405*^9, 3.735452746435484*^9}, {
  3.7354527841036*^9, 3.735452809329844*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L", "\[NotEqual]", "0"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", "\[Equal]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "+", 
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
               RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], "L"]}]}], "||", 
        RowBox[{"k", "\[Equal]", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}], "L"]}]}], ")"}]}], ")"}], "||", 
    RowBox[{"L", "\[Equal]", "0"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7353112264826183`*^9, 3.73531124722698*^9}, 
   3.735311291264756*^9, 3.735311366952694*^9, {3.735311398675749*^9, 
   3.735311471230917*^9}, 3.735311505910019*^9, 3.735311675320608*^9, {
   3.735361516920972*^9, 3.735361523366798*^9}, {3.7354526319446173`*^9, 
   3.735452746761653*^9}, {3.735452792619404*^9, 3.7354528097983932`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7353112264826183`*^9, 3.73531124722698*^9}, 
   3.735311291264756*^9, 3.735311366952694*^9, {3.735311398675749*^9, 
   3.735311471230917*^9}, 3.735311505910019*^9, 3.735311675320608*^9, {
   3.735361516920972*^9, 3.735361523366798*^9}, {3.7354526319446173`*^9, 
   3.735452746761653*^9}, {3.735452792619404*^9, 3.7354528098026667`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
iUZVoUNnw3+POuXj8LXjchGH1OlgszHP9hQ3Ac+o/eUPa9DhaPj26tfKidhg
5tnNIE06CPsNDYo3J+JXqamfcrbSYehbjHPt2yRMuDFuMbiLDvvqFh3bKZyK
rUK7fXyQwD/+9zt+Siou0S9L/gd0OKwp2nWEkIa3P7VuXmtAh8+/hkxeCaVj
9zmsfNyYDp5l4+Sqpxm4uj3PYHo/HZqHMpYt2p2JF2UEOCaZ0qHFK3r30YpM
nCujmH3lAB0Kd71vlwnNwvcMMheNWdHhqk8j+hjEwgyK++ooazps/5utalrM
wg4Deto0WzqYFl5rk+hi4WmPX14aR+lwXqf1wdMVbKy/5VFiuwMdomTjs5u3
s3Hm/OXzh53ooF1ddHPBjo0VsuwHTh+jg0XB/L6oAjb2t9aeWH6cDl+3FDnW
17NxsyyNnOdGhz+9j//o9rMx4etnxQ3udBjcyu2ljbGxZXW7fqMHHU7p8FtV
hDm4OLLwqIkXHT58P/Y4Q4qDv+0JDnntTYd3V5I3a6lz8DbaQa6vLx3Udet2
rTXg4PgXGyoXTtLhyvLPkaaWHPy4ZGkXy48Oxylh5xtdOVjK+80H2QA63JbS
i/Pw52B3rfp/VYF0UHt8QcnqDAff+seWMDhNh9CSi63RyRz8756X5tNgQb5f
Zi6PsjjYmG1o7hZKB43++WMZORzMt5Xx/B1Gh3vm3SW+Zzl4SG42PjmCDidm
tkB6EQerfe8tkjhDh02T9Xofizk4rPZaQ3kUHU7fSxyIENgdUYlPd8bQYVLd
3f7AOQ5m7HP6+SCWDvlTNZbO+RzswNhBdIgXxCvTD7jB4+DyV0yFHwl0aD2j
n6WbwcHTpd8hOokOVpqbKknxHKzne8+OnkKH5Y8v/VsdysFzzz/vuZMq0Jv2
x/d7vTi4ejdJIzidDgsfI2Y97DjYp1JtzYZMQf1df/jE7+NgBYmDIq+z6EDS
oZ7P0+Lgd3EBk1lsOpgbVmy8Jtjn8say3+hz6bA7z+BT83IOJt15WX2ZT4fX
8kFG40/YuEPtb5FdLh3+3hG6vrKajaPyZNIo+XTQNTuP9/PYeMLX1TmwkA59
QTK3v5mx8bUXiSaKRXTwdfy9wkWZjY8bXNn6spgOEj33hKYXs/FziTEylNKh
JLusJb2ChTnxtNmJMgHffQ6X86JZeP8PjeGyS3Q4k6p18MVBFm6+E9xAvCrQ
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7353112264826183`*^9, 3.73531124722698*^9}, 
   3.735311291264756*^9, 3.735311366952694*^9, {3.735311398675749*^9, 
   3.735311471230917*^9}, 3.735311505910019*^9, 3.735311675320608*^9, {
   3.735361516920972*^9, 3.735361523366798*^9}, {3.7354526319446173`*^9, 
   3.735452746761653*^9}, {3.735452792619404*^9, 3.7354528098282843`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]1", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"c1", "[", "t", "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "n"}], "L"], " ", "x"}]]}], "+", 
     RowBox[{
      RowBox[{"c2", "[", "t", "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        FractionBox[
         RowBox[{"2", "\[Pi]", " ", "n"}], "L"], " ", "x"}]]}]}], ")"}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]", " ", 
     "t"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]2", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"c1", "[", "t", "]"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         FractionBox[
          RowBox[{"2", "\[Pi]", " ", "n"}], "L"], " ", "x"}]]}], "+", 
      RowBox[{
       RowBox[{"c2", "[", "t", "]"}], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         FractionBox[
          RowBox[{"2", "\[Pi]", " ", "n"}], "L"], " ", "x"}]]}]}], ")"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "t"}]]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "do", " ", "a", " ", "cutoff", " ", "based", " ", "on", " ", "uncertain", 
     " ", "priciple"}], ",", " ", 
    RowBox[{
    "or", " ", "divide", " ", "the", " ", "system", " ", "into", " ", 
     "periodic", " ", "conditions"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2", "=", 
   RowBox[{"-", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]2", "[", 
          RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L3", "=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["m", "2"]}], 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]1", "[", 
        RowBox[{"x", ",", "t"}], "]"}], "*", 
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "t"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lt", "=", 
   RowBox[{"L1", "+", "L2", "+", "L3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "L1", ",", "L2", ",", "L3"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7333855659495697`*^9, 3.733385575557081*^9}, {
   3.7333856068136597`*^9, 3.733385634410572*^9}, {3.733385770970594*^9, 
   3.733385845332191*^9}, {3.7333863736118193`*^9, 3.733386587057913*^9}, {
   3.733386681050932*^9, 3.733386683305428*^9}, {3.733386783819923*^9, 
   3.7333868671765738`*^9}, {3.7333871507768803`*^9, 
   3.7333871975437307`*^9}, {3.733387616586607*^9, 3.73338763217622*^9}, {
   3.733387681271833*^9, 3.733387745236595*^9}, {3.7353125715839443`*^9, 
   3.7353126218390293`*^9}, {3.7353127033020897`*^9, 3.735312713582123*^9}, {
   3.735357623203369*^9, 3.7353576464142313`*^9}, 3.735357690184093*^9, 
   3.735357734230731*^9, {3.735357834687311*^9, 3.735357840936466*^9}, {
   3.7353580799313107`*^9, 3.735358081731835*^9}, {3.735363543769855*^9, 
   3.73536354464215*^9}, {3.735451812661655*^9, 3.735451817460875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"Lt", ",", 
     RowBox[{
      SuperscriptBox["c1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], ",", "t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"Lt", ",", 
   RowBox[{"c1", "[", "t", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"Lt", ",", 
     RowBox[{
      SuperscriptBox["c2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "]"}], ",", "t"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"Lt", ",", 
   RowBox[{"c2", "[", "t", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "@", "Lt"}]}], "Input",
 CellChangeTimes->{
  3.735357726650473*^9, {3.735357825009494*^9, 3.735357906345476*^9}, {
   3.735358118867423*^9, 3.735358125416511*^9}, {3.735360329795281*^9, 
   3.735360333711142*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"L", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
      RowBox[{
       SuperscriptBox["c1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["c2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.735357877890565*^9, 3.7353579094298687`*^9, 3.735358129897997*^9, {
   3.735360334763842*^9, 3.735360339157526*^9}, 3.735361524099865*^9, 
   3.7353635532932367`*^9, 3.7354519338468924`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
        RowBox[{"c1", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"c2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "L"]}], 
  "-", 
  RowBox[{"L", " ", 
   SuperscriptBox["m", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"c1", "[", "t", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"c2", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}], 
      RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"L", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"c1", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"c2", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
   RowBox[{"n", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{
  3.735357877890565*^9, 3.7353579094298687`*^9, 3.735358129897997*^9, {
   3.735360334763842*^9, 3.735360339157526*^9}, 3.735361524099865*^9, 
   3.7353635532932367`*^9, 3.735451933850498*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"L", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["c1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
      RowBox[{
       SuperscriptBox["c2", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
  RowBox[{"n", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.735357877890565*^9, 3.7353579094298687`*^9, 3.735358129897997*^9, {
   3.735360334763842*^9, 3.735360339157526*^9}, 3.735361524099865*^9, 
   3.7353635532932367`*^9, 3.735451933853833*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
        RowBox[{"c2", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "L"]}], 
  "-", 
  RowBox[{"L", " ", 
   SuperscriptBox["m", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"c2", "[", "t", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"c1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}], 
      RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"L", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "n", " ", "\[Pi]", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"c2", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{"c1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
   RowBox[{"n", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{
  3.735357877890565*^9, 3.7353579094298687`*^9, 3.735358129897997*^9, {
   3.735360334763842*^9, 3.735360339157526*^9}, 3.735361524099865*^9, 
   3.7353635532932367`*^9, 3.735451933856565*^9}]
}, Open  ]],

Cell[TextData[{
 "The equations of motions are given by: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["c", "1"], ".."], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      OverscriptBox[
       SubscriptBox["c", "2"], ".."]}]}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "-", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "+", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      SubscriptBox["c", "2"]}]}]}], TraditionalForm]]],
 " (1)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      OverscriptBox[
       SubscriptBox["c", "1"], ".."]}], "+", 
     OverscriptBox[
      SubscriptBox["c", "2"], ".."]}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "+", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "-", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], " ", 
      SubscriptBox["c", "2"]}]}]}], TraditionalForm]]],
 " (2)\nOn the boundaries, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
     RowBox[{"4", " ", "n", " ", "\[Pi]", " "}]], "=", "0"}], 
   TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", "2", ",", "3", ",", "4", ",", 
    RowBox[{"5", "..."}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["c", "1"], ".."], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], "-", 
       SuperscriptBox["m", "2"], "-", 
       FractionBox[
        RowBox[{"4", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"]}], 
        SuperscriptBox["L", "2"]]}], ")"}], " ", 
     SubscriptBox["c", "1"]}]}], TraditionalForm]]],
 " (3)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["c", "2"], ".."], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], "-", 
       SuperscriptBox["m", "2"], "-", 
       FractionBox[
        RowBox[{"4", 
         SuperscriptBox["n", "2"], " ", 
         SuperscriptBox["\[Pi]", "2"]}], 
        SuperscriptBox["L", "2"]]}], ")"}], " ", 
     SubscriptBox["c", "2"]}]}], TraditionalForm]]],
 " (4)\nBetween the boundaries for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "\[Rule]", "\[Infinity]"}], TraditionalForm]]],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["c", "1"], ".."], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      OverscriptBox[
       SubscriptBox["c", "2"], ".."]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"]}], ")"}], " ", 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"]}], ")"}], 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      SubscriptBox["c", "2"]}]}]}], TraditionalForm]]],
 " (5)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      OverscriptBox[
       SubscriptBox["c", "1"], ".."]}], "+", 
     OverscriptBox[
      SubscriptBox["c", "2"], ".."]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"]}], ")"}], 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]], 
      SubscriptBox["c", "1"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"]}], ")"}], " ", 
      SubscriptBox["c", "2"]}]}]}], TraditionalForm]]],
 " (6)"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/cF0XfrCK68dozln14DorZJ6LSDa7ZtbJ4hOk7jY
C6I1RZZOBtH3ggtngOiIlQ3rQfTEWqmtIPrC7t/XQHRJ76xnINrPfepbEC0z
9etfEB03yZ5nEZA+ND1BEESnLZouBqL/ze2MAdFlK1viQPSb2s0nQHTDw8Yb
IPraC+0HIHqLocUbEJ0y/eUHEH0l+cdPEH2ubrHgYiDd9bVPCESfK2qRANFv
gpRVQPQkfilTEF0ZJWMGoo9w2TMuAdI9cnvB9ITYaDEQHdThLwWio7kKtc8D
6W+1efog2iam2RhE1x06aAKiTXa8sQLRXz0uOoLoqBfbZoHoJIOb80F0Xrzt
chC9r1RlK4gGAFJXzm8=
  "]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c10", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c20", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["c1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["c2", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{"4", "n", " ", "\[Pi]"}]]}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "-", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], " ", 
      RowBox[{"c1", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "+", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], 
      FractionBox[
       RowBox[{
        RowBox[{"c2", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["c2", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["c1", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{"4", "n", " ", "\[Pi]"}]]}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "-", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], " ", 
      RowBox[{"c2", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["m", "2"], "+", 
        FractionBox[
         RowBox[{"4", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], ")"}], 
      FractionBox[
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "n", " ", "\[Pi]"}], "]"}]}], 
       RowBox[{"4", "n", " ", "\[Pi]"}]]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eq1", ",", "eq2", ",", 
      RowBox[{
       RowBox[{"c1", "[", "0", "]"}], "\[Equal]", "c10"}], ",", 
      RowBox[{
       RowBox[{"c2", "[", "0", "]"}], "\[Equal]", "c20"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["c1", "\[Prime]",
         MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["c2", "\[Prime]",
         MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c1", "[", "t", "]"}], ",", 
      RowBox[{"c2", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"c1", "[", "t", "]"}], "/.", "solution"}], ",", 
     RowBox[{
      RowBox[{"c2", "[", "t", "]"}], "/.", "solution"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Blue"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "c10", ",", "c20", ",", "n", ",", "L", ",", "solution", ",", "m", ",", 
   "\[Omega]", ",", "eq1", ",", "eq2"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/ailP23RldeO7xSz+0D0to4zk0D01P4n00B0yYH7
s0G0XuSruSD6i8hmrsVA+laKpACITqifbQWiK0t/BYDorTnbP4LojPIXX0H0
nMUX/oHoH3+X/QfReyKnKy4B2bf0HZjmrrkx7RyQDuIVXwii89gPLgPRh+wa
doLFcwv3guiaJS1nQbTWMe9rIPrYn8CbILpi+vdHIPpeq+NjEP1vV/1rEN00
u+wdiD6g0/sfRF8oruA9D6TPXF3gCaIfWIZFgug6z4uxIFogXS0fRFcFPiwG
0Zm9qZXnwe4v3QaiGwR1d4FoAPwdvqw=
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"c1", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"c2", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.735360708867325*^9, 3.735361524232499*^9, {3.735362113426252*^9, 
   3.735362171776558*^9}, 3.735362229144176*^9, {3.7354509937463303`*^9, 
   3.735451084510872*^9}, {3.7354511192328243`*^9, 3.735451244519127*^9}, {
   3.7354513286877403`*^9, 3.735451339120389*^9}, 3.7354514186664257`*^9, {
   3.735451498365806*^9, 3.7354515083411007`*^9}, {3.735451645080757*^9, 
   3.735451775075879*^9}, {3.73545229596745*^9, 3.735452363108328*^9}, {
   3.735452399667851*^9, 3.73545253769032*^9}, {3.735452575935603*^9, 
   3.735452619656464*^9}, {3.7354531102601347`*^9, 3.735453137826529*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], LineBox[CompressedData["
1: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
RysmbIVh3uvWhxyKXXUZEpudhYFzM9H1E8WnJ271RXoIw+v3Ryt9KPbLn1/U
6CsMAvI2BfMpvhIYfkfFXxhClgiYXKfiC9/Jf941UBj2tzxzH6XyuS7td+Bd
uDDYPezWMKT4VsPICoHrwmB62uiCM5X/ndsuEntuCoOuUITDBUqftBM9fQnJ
whCaeXbIi9Lv2VKroq4HwiBlOCG+h9I3i/P9zvJ0YTBumyuRpPTPzTI9f+6l
MDxZ/kT5NVWfgnOlBz5nC0PmWnm59VT9qoVyJY4UUvV44NQ2RdX7e4Ve/8NS
YaD/R3+jO0z5LSajiPdVGIYD/ltuwiOYrZRyPrhFGBwfly/QYxP8u4tmUdMh
DA9fjwdM91N+So/WXdQvDEnrghPTewkWXh3QnzkqDCk362qzOgiWnPlTND0l
DNvKvo1JU/6VLfS8u51PBFavyqrc20owa4+tRaukCBhF30oO+E6wulyr7lI5
EXD9Hp/kTvlf54e5pNdCEdgg4nxgSw21fk5u/yyyVAT8voZLJJYRvFXr0919
2iJQkhIhtaiE6ie/1/ilrBSBiuKKpsuFBB++qKG3EolA+cnz32ZzCfa5KXHP
6rAIzHbF5rx8SvCFY8F+6dYiIPJ35sAhar0Hqvy1GLUXgZN5rU099wmOecGT
jPASgaLZfQkvEwh+XvLNL/uqCMwsiHT7G0Rwz3jCQYmPIuCueNso6hDl782r
Tv/8LAI7+11MBah+dTy6+npmhQiobNSsPbyL4BY14XLzZhEIyLK2fGJI8Ddz
7w0poyIQ0ax3rJJJ8KfXJqzlmvMggO1yZnUHD/v/7Tec050HC9IrQt828fA6
46Aj39bOg9JEzUjFGh7O7siN890+DxJMcVzARx7OmK8u/OnEPIjVrEpoSeTh
BDd+tmnCPLg8rZNdZczDB3JTRFTuzgOF4y+P2CCqnwsbqI6mzYPylKtRTfo8
fC3F3TIhax40zfUVOzGp90Fla/Wvr/MgQyPvFXOUiz2XvX3jKSQKEYd/WA7G
c/Gu3lMX47xE4dq/Yt/NRRxsdFH1+bZzovC385eUTTYHb6G3tUxcEgX3cr6v
9o85eP32PQbHokQh7nTOhOJVDtZ8tGJU9YkotIx5+a0242CJk2NOOW2iEGKl
lrm7aQhX9Vw80LxDDBL3bLpl8Y2Ny/zXBF01FYNVR64cky9g42IaeW1oIQbo
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
QMB4
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVmHk8lN8Xx+1ZS8ygvsyMKEKitEnd06aUpKQVZcmSXbRIKbtQSCFKoZIW
JSpSF5E1hBCSfRkzc8uStfye3/wx83q/5nlezzmf87nnOfcq27gfOCXAx8fn
Q339//fuZRsRXbuIzeP/5qgPwSUNLOPDLCdUe6DnwAjFc58/BrJYFxDvWPmR
Cornx755Kd4SgO5f4EkGU3y3MIopzApHIUZLPZdSrEXsrs853ECbqkeDMv8R
/GP+vX+zzbHod3rxLhrFqo/E1k7P3EJvfGQ+2Pwl2GWTj+sEMxHVZfp235ol
+HVjZ/rYtmQkrZKZ93yG4Gln4/bfDinompTDtsxpgu/zt4dP7HiABnuvX4mY
Inj7l5ilf5pT0fGjcl77JwkeTNhZNOaUjoodxRbN/iE40u6vxejMQxTkGnE2
YpzghhnHuF/MJ+irz+ZjR0YIPlvG0CGvMtF/TRo9t34RvPhmYxV32zN0pl1R
/R2PYBsNEBx2yELRH8I4mWyCBWZ8a8f8XqIhjfPuFwcJbuw0Vxrb8QplHTuS
q9NP8PlnEnkjzdlI4vq3GKMugnfH9ouM3H+NvLMfaD3vIFjxfNHB30456Mqb
gtjxNoILt537RWZykZTEpkq9JoLntXWrcZl5KBXJrnCtILil8IMPZzAPFc6z
cpwoJTjzUcKn4Vf56CHfwiD7YoJNvExOsLcVoMmtY46j+QTfFsu/PeCA0dL8
29vKMwnOObfb64xCIfrU6NR+4RHByex1i0b9ChG/brCHdCrBbnUyDiM7ipDE
pg+JnASCZZLLBX43F6OjTIsT1sEEz8x/88TD4BPKfzYBG68Q3Hs1zfTX/U/o
iV7g5mlfgt84XL5HnEpQtJpHipoHwcdW6+nzZkpRg86Xi3CU4AeVKZ7DzAo0
8i9M0H0ZwWMJuRo/IyvQWe2jbaJMgg0dqnrqpyg2qLkQKE8wR3DCPL+hEj3T
HlX/T5Tg9ZtM9MNDq9E852Wa3wZ4uC5rVkCN1KJZ+Rt/fR/wsAwSs5LSrkNW
wh5SSxN4eOOyOP1Quzrkydrj/PI6D18fezLq+7UOFbYLrHO+yMN6Md9O2Tz9
iiwb3zC9zHjYv1Jrt+6JBuS4PUml5i8XZ7x6u+zprQY0m+RUHjPCxfUJWwWX
VjegXAEj63UDXKzqcKRAYUMjsrPkJavXcXGlYJA2n+w3xD5rEZB+n4vlNrXJ
1H5uQiqgnyxpwMUvssLbXLRbkZpJZumkBQezZdiRu61bkfM+3CK9j4PVzu7e
rB7XitRZ0erSWzj4voHEg56pVrTA2yerRJWDYysi7Y+VtqHk3EtvRIaH8dme
G793WvxAwWdHv055DeMUiarAhTs60YHXYR1THmy8edNFiytWnejwFY0umZNs
3O6muYac60TXbl/9StvHxgr1Ef3VmZ0o4UHTmwYtNo5JMDYKk+5CRz8bbEAD
Qzhwac38ubYudDxqMrT18BB2QF8TOV49SI9P+lGM+iDmS/2T3xbRg5Ifj6Ya
0QdxgpBie2V6D9o0fPgkl38Ql1fYM5409aDl3FrLydYBrH5wNvWUfi/qGPZZ
yYgcwIOOas86+PtQJH1FyVt2Pz4de+ljXXQ/MksaK76T2Ifd+pb35LwYQiHd
ClK04m4srhyk9nP9LzT2+FjgdGIzvi5dpfHg5Ch6qjQtMBhbjG3aDmLB6j+I
f5ff3wip98izNMjGXW0aaeycPPJNsQm98pA0UzD6i2pxV3PSvS5UfUf2wvND
f1H9xv22W/O6UH/J4pStdn+Rav6Xzc0NXWjxouXDLv5/0VTGj4tVot0oqGhH
YFHuXzT996dmm2c3OiTj//r0kn9IQoQWeQV60PTr37IfZv6hfX1iZ3RqexGt
Y3LDAbE5tPzrLz73gV6kLcp3ckBuDq27YZudMNeLbC3mP1u4ag6pXA9lPl/Z
h6qFNLfbO84hhvKLoObrfeieuZ33gm9zaKZsfZ2SUT96cNGZrXOYD55pSSXV
PhtAOoVik6GWfPAJFPS+Fw6gQqEM4Z+2fLDrjaNqTeMA6ozqZUV58IHLowul
F2YHEOO+5eGhcD6Q2pyv1rR7EN0p2VfyoIAPjpYvTY7rGUSxUnr3ZJbww8fw
+7dyhdhoyYH6p07q/DAS698mJsdGr2575BVq88NFbfDcqcZGdcznjW4b+cHv
10XTy0ZsNH/VMomqg/wQsaBy8/dINrp2SOF8YCg/uHmvUV23YBgFpMzuH+Pw
w03HjZG6AhxkqvPOU3OUH2DEXtpYmoMYRWdibKb4oboghrmPwUH53ey6OmEB
AGnGy/n6HDSy9Pu+5wwBcJ0cOOTlwUE2z3L32psKQGHbdHdRCwfpbPJ0vXtI
APq+PC050cdB/75oRTVaCMCA3Cb/vt8cdIekVW91EoD9G9ebZ4hzUf2q2D3M
AAFIfRZsJ76Ri7bkuRm1vBYA1eKxA+viuWj+bg2nBfkC8F7DeJ5JKhe1t/aF
GRYKgNPI3T97nnPR+VmL8pxqAZBtDbL+W8xFL9GenTF9ApC/brXLGi4XsT6r
7dgtLwjs651vRwx4iHeox+6qkiAcqCyYPm/IQwUD94LeqQgCs8yc9O3joSNi
ciXLdAThiYVpzRkbHoo2FtomaCQIR0/Pj7QK4SG+hk4o8BWENpHyGKcKHgoa
+vjA96ogGP3cXSlQz0NifHcFNoQJgnPzwqxLrTwks+JoSe4tQRjoWG6hMMxD
S0O/7sx6KQgX6ettOsUJyrybleH6VhDgatGiEBmCtHOixLQ+CoL4OZnNUosJ
Wt9lVJVRJQgaMsFZWJ2g3RuLTVL7BSFD555rznaCavbfzzrJFYTTRwOL7fYQ
ZOZ4WZo5JghvBdYZ/9lPkMUt/fokfiGwETbpLbAiyI1km99SFIJCQ3yh+SxB
I8Ixb8xUhOD+7vLP0X4EnVN0l5fREAKl/UhBM4CgK0aa36+vE4I1nPBsgSiC
bqalWYQdEAKx91h30wOCFPKvfjA8KgQHfsbM//eQoOS6Ewzhk0IQWSJdlpJJ
0KO//3VedRUC9YbJd8GvCdKgTQN4C8Eu//tDFW8JytJoefDPVwgYk569vPcE
vTscZ3sxTAhGNp5Ub/tEkIGbV8mGG0LgfO+lU2oZQUVBpksnbwnBN4HYU7ur
CKp8JTngnUbFe63wskE9Qe0SwafdPgrB5qo73zM6CDq5xLZKq1QI3HKdYny6
COpbv0VruEoI+E2t2Et6CeKd+st1+C4EAStMfJhDBJ3xazNZ1ikEdiHWqW7D
BE3G5mX19gtBc0Gl/T0uQfyFPp7WY0KgKK3yPOU3QSFNZvXMGer+dGVNz1GC
xLm6qzv4hWFQ5NZ6lXGCbghKxyWLCsMbw/qG3D8E0Rbzxo4tEIZ3Nntn1CcJ
StCpNl8kJwwlRonP/aYIUtqZ+aZZURis2hyGXk4TlGoZJn9bRRiODIY/L50h
aJm3/fmDGsJwbjWZzJ8laIX+T7MUHWGI/+V6LvAvod4LR1ay1wqDtWVblM4/
gjZ+rhNfs0kYxtalbSymeGukUb//NmGwzN11Zf0cQUYHiosqjYRBPMD++E2K
TRU23qWbCsO64hfV9RQf7nh9/uQhYXCSGW74Q7FVutbBpxbC0Bk660HNp+jU
6Ycr/9gIw7xXbWkcil10GBJbnISBcyvB5SPFZ/7c7o9wF4ZX745VeVPsW7Cg
uMlHGATkrAsXUHw1IOyusp8wBC8VML5BxRe2i/+CS4AwHGh96jZK5XNjvu/B
t2HCYJvWo25A8e3GkZUCN4TB5IzhRScq/7t3nCX23hIGHaFw+4uUPukne/vj
k4QhJOvcsCel39NllsXdD4RByuCP+F5K32zOt7srMoTBqH2uVJLSPy/b5ML5
F8LweMVjpVdUfQrPlx38lCMMWevkZPWp+tUI5UkcLaLq8cCxfYqq97dK3YG0
MmGg/0d/rfOL8lt0ZjHvizD88v9vhTGPILZi8oWgVmFweFSxUJdN0O9umnlt
pzCkvRr3nx6g/JQRpbN4QBgSNwQlZPQRJLzGfyBrVBiSb9XXZXcSJDkzUTw9
JQzby7+Ozaf8K1PkcW8HnwisWZ1dta+NINZeG/M2SREwjLqd5P+NIDXZNp1l
siLg8i0u0Y3yv/Z3M0nPRSKwUcTp4NZaav2c2vFJZJkI+H4Jk0goJ2ib5sd7
+7VEoDQ5XGpxKdVPfq/1TV4lApUllc1Xigg6cklddxUSgYpTF77O5hHkfUsi
xfKICMx2x+S+eELQxeNBvhlWIiDyd+bgYWq9Byj/NR+1E4FT+W3NvfcJin7O
kwz3FIHi2f3xL+IJelb61TfnmgjMLIxw/RtIUO94/CGJDyLgpnDHMPIw5e8t
q8/8+CQCuwacTQSofnUiquZGVqUIKG/SqDuym6BWVeEKsxYR8M+2snhsQNBX
M6+NyaMiEN6ie7yKSdDHV8asFRrzwJ/tfHZNJw/5/R0wmNOZBwszKkPeNPPQ
BqPAo1/XzYOyBI0IhVoeyunMi/XZMQ/iTXCs/wceylygJvzx5DyI0aiOb03g
oXhXfrZJ/Dy4Mq2dU23EQwfzkkWU780D+RMvjlojqp8Lr1cZTZ8HFcnXIpv1
eOh6sptFfPY8aJ7rL3FkUu+Dqraan1/mQaZ6/kvmKBd5LH/z2kNIFMKPfLcY
iuOi3X2nL8V6isL1fyU+W4o5yPCSyrPt50Xhb9dPKescDtpKb2/9c1kU3Cr4
vtg94iD9HXvXH48UhdgzuX8UrnGQxsOVoyqPRaF1zNN3jSkHSZwac8xtF4Vg
S9WsPc3DqLr30sGWnWKQsHfzbfOvbFTutzbwmokYrD569bhcIRuV0MgrA3Mx
QC9UV3x4wUYF208ueGAjBnqWk+s/RLDRs/StlU6XxCAsdWtd2HY2irKbBzPZ
YqC71Ujf8tUQMumN1mQwxIHpHdV74fwgqtbsbbRQFYcUPbN7l08Noj1n1l1O
0qBYW6/Y7cAg2iXQUaewThzOar8MW6g1iLayNM/KmoqDzrHVzTYdA2iNRWmh
aIA4WLSfHdiKBpBi45T5aJ84TJjQn7mP9CH2J5sr5c8lgI9TwnBY0oOYMS2n
r+dIwPD5gxW1oj3ooJWJ+cH3EuDrsujGUtKNPk5u0Ogsl4DMNQb1Ce+7UeyK
hY0TPRKwK6ZI6IFZN9oYj9XUFkuCZe+tUpMrXSjytGJtcIgkBEs+Ofgq8SfS
XtiktO2EFAw1Ju019GxB4mjcun10Ply4rjb73LQE7eQem1hiLg1rLRMLyKO3
uKXYjv+Y1kLYKaksc878G84NK7FijS+EsRdNX+/t6sIZu6sUQicXQlJrUXWY
bRe+I1lfz51ZCLesIq2sL3fhK9E/Dd8LyECSlHHbj9dd2DhhWvuQtAwsS9HY
y8/oxt2PdeYiNGVA+5rEcCuvG88vS06ZsJaB9345D1UCejF/eNpRq1MysHxe
cOXzO714bHembKmjDHiKzzNRed2Lv9e8DY11l4GwrM0L6np6cXpTvfuKSzLg
snvg64rtfVi/XxRsE2TgdlDbkT6+fmwv7NNZUyMDu/jTBu47DeDFzIrmma8y
UELv7J64NIBr1ivVqn+TATWfaQv92AG81qX0Q0CbDBSXKIVezR/AIg30pLWD
MpB2z7VcTnwQP7z/xvwevyx8qLXt2/twEPdunKx01ZMFxaLusAtVQzjB3Lj4
zjpZWGascpX5Ywgbu9/PK9OXBesK0/4XvCGck7orQ3mLLDS0r8sPX8jGQWKJ
wd/2ysL6w+TnikNsrNq8ATY5yIKesdkSlTY2tvW6mCt5RxYu87gPLRuG8dpV
HbnL78qCjix3X1XXMBYfoV7F92WhfkjjtvKvYfzSU+TtlUey4PnhWFmoJAfP
esS8G8uWBQhI9diwnYNvuz9+314lC5PP7hSqZXGw00rxgqkaWZj3IfrNogIO
NiAuBXL1srD0cVrMaDkH97it+mDaIgsKU7Rqq24O1nH78LGkVxaE1+9aLkPj
4gqXhqJnf6l4/01e6fHi4mSttcUVfDSq/6YMmFzmYg9OQnG/IA2KL52PfhBO
7V9drD6xxGlgw2oKmE3hYhvnoZI4ORqEx7n0hVZx8azTXJnfSho4FkxgjhIP
1y63KU9cRQOZ3iTBcjUeTh0qKX+zhgandXfOhOvysJHTtYpfG2mw+4B4f9F2
Hr7tSK+y20WDDtc9FXyneXilg2aNsTUNEpXkpHKyeLjDien+3I4Gm7HJiifv
eDjSRVZ6viMN/tvWN+lfxMNDnjP7a91o4D1u7V5fz8NpflXf9vvRYLXCQ47Y
GA8f8Mdns/1pYGch4isxy8N8Aa/lZQNp0N2+2YMnSLBlaNLRxnAaZGdrnz8i
S7B8rPOPQ/E00I84p1KgQ/DnuBOX396hganjCtXydQR7x5sxFe7R4KdS4YHc
zQR/Td5o/T2duv4DYqw2JjjisUTf8WwazHg/e/P+FMH6mXPBBbk0CJk+71rn
TPDgs9FlSnk0eEz7xPjsSfCO7DbHDkyDg09PHT14ieC5gqeck19ocH3J65iZ
WIJf4JSoojoaFOjaXZZPINii+Kb2kkYaTIS0b6DdJTiv7KJHTysNeuWjxV4+
Itix0n3h9g4aGAyY0PY9JVjui212ehcNRLTaW2uyCD5Tv2fs1CANNCIKwj3e
EbzkG7r1eZgGUjLXnGILCK5rXr1WjdAgkCweiyskeMWP/84PjtNgIKR2amM5
wQMDwzOnBemw0nTnyYVNBN9m/0yuEqFDvvVi7fXfCd7ObdikJU6HmKcO11A7
wQ9G3vtzpekQeiOxm3QRbDqexTKh0cFHvbMloZfgfxNpRS/k6XByzu7AkgGC
j/+NEPRg0KHgwrbSpmGCxfmupNcp02FiaiKPn0fwOwHvHbpL6dB04b661C9C
9QvH/hh1OrjtXb+Amo8wXdQidESTDuWT351LRwkuETdVN1tJB6yNDbzGCfaS
2l7xehUdVj2DK3N/CGZJrz9NW0sH7o4mPddJgmtltCR8NtBBbUbu6Pspgje7
ug4lGVDxhTNeNU1T9Sh7UVaM6ND+3fBa0wzBjCW/Hg5tpcOXf697qHkYX/fT
DZI2pMOv5w8KqHkY/2vysllnRIe3YEvT/Uewq24OWBlT+efYsql5GLdHjDOC
99EhMnPp5g1zBBv3r/379ACd2h9vWxBHcQGcb6s3p/RrcbNs+P95alJe3tQR
OoyFeapPUJw8Ph3PsqCD8nOt/8/DWMLU4OzOE3TYoJSoR83D2Dfz0kE3Gzpc
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
QJz4
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-0.9999999999999704, 0.9999999999999704}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.735360708867325*^9, 3.735361524232499*^9, {3.735362113426252*^9, 
   3.735362171776558*^9}, 3.735362229144176*^9, {3.7354509937463303`*^9, 
   3.735451084510872*^9}, {3.7354511192328243`*^9, 3.735451244519127*^9}, {
   3.7354513286877403`*^9, 3.735451339120389*^9}, 3.7354514186664257`*^9, {
   3.735451498365806*^9, 3.7354515083411007`*^9}, {3.735451645080757*^9, 
   3.735451775075879*^9}, {3.73545229596745*^9, 3.735452363108328*^9}, {
   3.735452399667851*^9, 3.73545253769032*^9}, {3.735452575935603*^9, 
   3.735452619656464*^9}, {3.7354531102601347`*^9, 3.735453137915922*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["k(t), c1(t) and c2(t) with boundary conditions", "Subsection",
 CellChangeTimes->{{3.73338574871098*^9, 3.733385758791883*^9}, {
  3.733387846420237*^9, 3.733387846684141*^9}, {3.7353127972163773`*^9, 
  3.7353127999523077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]1", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"c1", "[", "t", "]"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"k", "[", "t", "]"}], "x"}]]}], "+", 
   RowBox[{
    RowBox[{"c2", "[", "t", "]"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"k", "[", "t", "]"}], "x"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]2", "[", 
   RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"c1", "[", "t", "]"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"k", "[", "t", "]"}], "x"}]]}], "+", 
   RowBox[{
    RowBox[{"c2", "[", "t", "]"}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"k", "[", "t", "]"}], "x"}]]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "*", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], "*", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]1", "[", 
     RowBox[{"x", ",", "t"}], "]"}], "*", 
    RowBox[{"\[Phi]2", "[", 
     RowBox[{"x", ",", "t"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"\[Phi]1", ",", "\[Phi]2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7333855659495697`*^9, 3.733385575557081*^9}, {
  3.7333856068136597`*^9, 3.733385634410572*^9}, {3.733387182229796*^9, 
  3.7333872364280148`*^9}, {3.733387474629903*^9, 3.733387483976159*^9}, {
  3.735311729153363*^9, 3.7353117397433968`*^9}, {3.735312882514922*^9, 
  3.7353128860345907`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"k", "[", "t", "]"}], "3"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"k", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "L", " ", 
          RowBox[{"k", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["c1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["c2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"k", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["c1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["c2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"k", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "L", " ", 
          RowBox[{"k", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"k", "[", "t", "]"}]}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"k", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"c2", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["c1", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["c2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["k", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "6"}], " ", "L", " ", 
        RowBox[{"c1", "[", "t", "]"}], " ", 
        RowBox[{"c2", "[", "t", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "L", " ", 
          RowBox[{"k", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"k", "[", "t", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["L", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"c1", "[", "t", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"c2", "[", "t", "]"}], "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"k", "[", "t", "]"}], "3"]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"c1", "[", "t", "]"}], " ", 
        RowBox[{"c2", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["L", "2"], " ", 
           SuperscriptBox[
            RowBox[{"k", "[", "t", "]"}], "2"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "L", " ", 
          RowBox[{"k", "[", "t", "]"}]}], "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["k", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.733387294753137*^9, 3.735311744872519*^9, 
  3.735312889774309*^9, 3.735361529847468*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"k", "[", "t", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"L", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"c1", "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"c2", "[", "t", "]"}], "2"]}], ")"}], " ", 
     RowBox[{"k", "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{"c1", "[", "t", "]"}], " ", 
     RowBox[{"c2", "[", "t", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "L", " ", 
       RowBox[{"k", "[", "t", "]"}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.733387294753137*^9, 3.735311744872519*^9, 
  3.735312889774309*^9, 3.735361530104342*^9}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"L", " ", 
     SuperscriptBox[
      RowBox[{"c1", "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"L", " ", 
     SuperscriptBox[
      RowBox[{"c2", "[", "t", "]"}], "2"]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"c1", "[", "t", "]"}], " ", 
      RowBox[{"c2", "[", "t", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"k", "[", "t", "]"}]}], "]"}]}], 
     RowBox[{"k", "[", "t", "]"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.733387294753137*^9, 3.735311744872519*^9, 
  3.735312889774309*^9, 3.735361530410063*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1343, 1126},
WindowMargins->{{Automatic, 46}, {Automatic, 0}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 2., 2. Inherited],
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 118, 1, 149, "Title"],
Cell[700, 25, 122, 3, 78, "Author"],
Cell[825, 30, 195, 4, 30, "Department"],
Cell[CellGroupData[{
Cell[1045, 38, 101, 1, 52, "Subtitle"],
Cell[1149, 41, 2857, 88, 350, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4043, 134, 285, 5, 52, "Subtitle"],
Cell[4331, 141, 806, 28, 57, "Text"],
Cell[CellGroupData[{
Cell[5162, 173, 1629, 47, 174, "Input"],
Cell[6794, 222, 719, 20, 82, "Output"]
}, Open  ]],
Cell[7528, 245, 752, 23, 105, "Text"],
Cell[CellGroupData[{
Cell[8305, 272, 294, 4, 138, "Section"],
Cell[CellGroupData[{
Cell[8624, 280, 101, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[8750, 285, 1198, 34, 149, "Input"],
Cell[9951, 321, 948, 26, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10936, 352, 1055, 32, 149, "Input"],
Cell[11994, 386, 774, 24, 102, "Output"]
}, Open  ]]
}, Open  ]],
Cell[12795, 414, 114, 1, 44, "Subsection"],
Cell[12912, 417, 135, 3, 41, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13084, 425, 108, 1, 138, "Section"],
Cell[13195, 428, 91, 5, 112, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13335, 439, 223, 4, 102, "Subtitle"],
Cell[13561, 445, 1063, 30, 97, "Text"],
Cell[CellGroupData[{
Cell[14649, 479, 294, 4, 138, "Section"],
Cell[14946, 485, 976, 16, 112, "Text"],
Cell[CellGroupData[{
Cell[15947, 505, 192, 2, 44, "Subsection"],
Cell[16142, 509, 3694, 122, 218, "Text"],
Cell[CellGroupData[{
Cell[19861, 635, 1221, 30, 221, "Input"],
Cell[21085, 667, 1213, 29, 101, "Output"],
Cell[22301, 698, 462, 7, 72, "Output"],
Cell[22766, 707, 35125, 579, 474, "Output"]
}, Open  ]],
Cell[57906, 1289, 4416, 123, 392, "Input"],
Cell[CellGroupData[{
Cell[62347, 1416, 938, 27, 193, "Input"],
Cell[63288, 1445, 734, 19, 99, "Output"],
Cell[64025, 1466, 1448, 42, 171, "Output"],
Cell[65476, 1510, 732, 19, 99, "Output"],
Cell[66211, 1531, 1448, 42, 171, "Output"]
}, Open  ]],
Cell[67674, 1576, 6234, 208, 442, "Text"],
Cell[CellGroupData[{
Cell[73933, 1788, 5076, 152, 684, "Input"],
Cell[79012, 1942, 1398, 36, 103, "Output"],
Cell[80413, 1980, 27145, 452, 477, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107607, 2438, 235, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[107867, 2445, 2570, 75, 234, "Input"],
Cell[110440, 2522, 3513, 102, 218, "Output"],
Cell[113956, 2626, 695, 20, 82, "Output"],
Cell[114654, 2648, 650, 19, 103, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
